version: '3.8'
services:
  web:
    image: ecommerce_project
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - db
    networks:
      - ecommerce_net
  db:
    image: postgres:14
    container_name: ecommerce_db
    environment:
      POSTGRES_USER: ecommerce_user  
      POSTGRES_PASSWORD: ecommerce_pass
      POSTGRES_DB: ecommerce_db
    volumes:
      - pg_data_ecommerce:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Пробрасываем порт
    networks:
      - ecommerce_net

  redis:
    image: redis:6
    command: redis-server --requirepass redis_admin_pass
    volumes:
      - redis:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - ecommerce_net

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:6379
      REDIS_PASSWORD: redis_admin_pass
      HTTP_USER: root
      HTTP_PASSWORD: root
    ports:
      - 8081:8081
    networks:
      - ecommerce_net

    # celery:
    # build: .
    # command: celery -A ecommerce worker -l info
    # volumes:
    #   - .:/code
    # env_file:
    #   - .env
    # depends_on:
    #   - redis
    #   - db

  # celery-beat:
  #   build: .
  #   command: celery -A ecommerce beat -l info
  #   volumes:
  #     - .:/code
  #   env_file:
  #     - .env
  #   depends_on:
  #     - redis
  #     - db

volumes:
  pg_data_ecommerce:
  redis:
  redis-config:


networks:
  ecommerce_net:
    driver: bridge